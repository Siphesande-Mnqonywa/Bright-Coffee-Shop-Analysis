# -*- coding: utf-8 -*-
"""BrightLight_Coffee.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14HP22B9v4Ma14TNNmxlD_pw1ObKi2iee

Import libraries

Importing python libraries that will allow me to work with data
"""

import pandas as pd
import numpy as np
from datetime import time

# Data visualization

import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""Store data in Coffee_dataset"""

Coffee_dataset = pd.read_csv('/content/drive/MyDrive/Brightlight/Bright Coffee Shop Sales.csv')

"""Show top 5 records of the dataset"""

Coffee_dataset.head()

"""To check the number of rows and columns if I have uploaded everything"""

Coffee_dataset.shape

Coffee_dataset.info()

"""Checking the number of duplicates"""

Coffee_dataset.duplicated().sum()

"""checking nulls"""

Coffee_dataset.isnull().sum()

"""check the summary of my data for numerical values"""

Coffee_dataset.describe()

"""Caculating total amount"""

Coffee_dataset['total_amount'] = Coffee_dataset['transaction_qty'] * Coffee_dataset['unit_price']
display(Coffee_dataset)

Coffee_dataset["transaction_time"] = pd.to_datetime(Coffee_dataset["transaction_time"],format="%H:%M:%S", errors='coerce').dt.time
Coffee_dataset["transaction_time"].min()

Coffee_dataset["transaction_time"].max()

"""Doing time classification"""

times = Coffee_dataset["transaction_time"]
times6_8 = (times >= time(6, 0, 0)) & (times <= time(7, 59, 59))
times8_10 = (times >= time(8, 0, 0)) & (times <= time(9, 59, 59))
times10_12 = (times >= time(10, 0, 0)) & (times <= time(11, 59, 59))
times12_14 = (times >= time(12, 0, 0)) & (times <= time(13, 59, 59))
times14_16 = (times >= time(14, 0, 0)) & (times <= time(15, 59, 59))
times16_18 = (times >= time(16, 0, 0)) & (times <= time(17, 59, 59))
times18_21 = (times >= time(18, 0, 0)) & (times <= time(20, 59, 59))
night = ~(times6_8 | times8_10 | times10_12 | times12_14 | times14_16 | times16_18 | times18_21)
conditions = [times6_8, times8_10, times10_12, times12_14, times14_16, times16_18, times18_21, night]
choices = ['6AM- 8AM', '8AM-10AM', '10AM-12PM', '12PM-2PM', '2PM-4PM', '4PM-6PM', '6PM-9PM', '9PM-6AM']
Coffee_dataset['times'] = np.select(conditions, choices, default='Unknown')

"""Season"""

Coffee_dataset['transaction_date'] = pd.to_datetime(Coffee_dataset['transaction_date'], errors='coerce')
Coffee_dataset['month_id'] = Coffee_dataset['transaction_date'].dt.strftime('%Y%m')
Coffee_dataset.head()

months = Coffee_dataset['transaction_date'].dt.month

summer = months.isin([12, 1, 2])
autumn = months.isin([3, 4, 5])
winter = months.isin([6, 7, 8])
spring = months.isin([9, 10, 11])

choices = ['Summer', 'Autumn', 'Winter', 'Spring']
Coffee_dataset['Season'] = np.select([summer, autumn, winter, spring], choices, default='Unknown')



Coffee_dataset.to_csv('Coffee_dataset_output.csv', index=False)
